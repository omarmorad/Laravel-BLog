<?php

namespace App\Http\Controllers;
use App\Models\Post;
use App\Models\User;
use Illuminate\Http\Request;
use App\Http\Requests\StorePostRequest;
class PostController extends Controller
{
    public function index()
    {
        $posts = Post::with('user')->paginate(10); // Change from all() to paginate(10)
        return view('posts.index', ['posts' => $posts]);
    }

    public function show(Post $post)
    {
        return view('posts.show', compact('post'));
    }
    public function create(){
        $users = User::all();
        return view('posts.create', ['users'=> $users]);
    }
    public function store(StorePostRequest $request){
        $request->validate([
            'title' => ['required','min:3'],
            'description' => ['required','min:10'],
            'post_creator' => ['required', 'exists:users,id']
        ]);
     
        $post = Post::create([
            'title'=> $request->title,
            'description'=> $request->description,
            'user_id'=> $request->post_creator,
        ]);
        // Slug is automatically generated by the Sluggable trait
        
        return to_route('posts.show', $post->slug);
    }

    public function update(StorePostRequest $request, Post $post)
    {
        $request->validate([
            'title' => ['required','min:3'],
            'description' => ['required','min:10'],
            'post_creator' => ['required', 'exists:users,id']
        ]);
        
        $post->update([
            'title' => $request->title,
            'description' => $request->description,
            'user_id' => $request->post_creator,
            // Don't manually set slug here, the trait will handle it
        ]);
        
        return to_route('posts.index');
    }
    public function destroy($id)
    {
        $post = Post::findOrFail($id);
        $post->delete();
        
        return to_route('posts.index');
    }
    public function edit(Post $post)
    {
        if (!$post) {
            return redirect()->route('posts.index')->with('error', 'Post not found.');
        }

        $users = User::all();

        return view('update', ['post' => $post, 'users' => $users]);
    }
}
